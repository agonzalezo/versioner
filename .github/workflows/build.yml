name: Build docker image

on:
  push:
    branches: [ main ]
  # pull_request:
  #   branches: [ main ]

env:
    API_NAME: versioner
    API_LOG_LEVEL: short
    PORT: 3000
    NAME_SPACE: ${{ vars.NAME_SPACE }}

jobs:
  build_docker_image: 
    name: Build docker image from ${{ github.event.repository.name }}
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub using ${{ github.repository_owner }}
        uses: docker/login-action@v2
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build and push ${{ github.repository }}
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ github.repository }}:latest
          platforms: linux/amd64,linux/arm64

  deploy_to_kubernetes:
    if: contains(github.event.head_commit.message, 'Deploy')
    needs: [build_docker_image]
    name: Deploy to Kubernetes ${{ github.event.repository.name }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Create kube dir
      run: mkdir ${HOME}/.kube
    - name: Create kube config
      run: echo "${{ secrets.KUBE_CONFIG }}" | base64 --decode > ${HOME}/.kube/config
    - name: Use context
      run: kubectl config use-context default
    - name: Make deployable..
      run: cd kubernetes && chmod +x deploy.sh && ./deploy.sh
    - name: Deploy to Kubernetes
      run: kubectl apply -f kubernetes/deployable.yml.tmp
    - name: Restart Deployments
      run: kubectl -n xylon rollout restart deployment ${{ github.event.repository.name }}
    - name: Check Deployment node-chat
      run: kubectl -n xylon rollout status deployment ${{ github.event.repository.name }}